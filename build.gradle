plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

group = 'org.example'
version = '1.0-SNAPSHOT'
description = 'spring-gym-app'


repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-jose'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'jakarta.annotation:jakarta.annotation-api'
    implementation 'jakarta.servlet:jakarta.servlet-api'
    implementation 'jakarta.validation:jakarta.validation-api'
    implementation 'org.hibernate.validator:hibernate-validator'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly group: 'org.postgresql', name: 'postgresql', version: '42.7.4'
    implementation 'org.flywaydb:flyway-core:9.10.2'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.6.0'
    implementation 'org.projectlombok:lombok'
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.13.6'
    implementation group: 'io.micrometer', name: 'micrometer-core', version: '1.13.6'
    implementation 'com.google.guava:guava:32.0.0-android'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}
test {
    useJUnitPlatform()
}

checkstyle {
    ignoreFailures = false
    maxWarnings = 0
    configFile = rootProject.file('config/checkstyle/checkstyle.xml')
}
